#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=99
STOP=05
USE_PROCD=1

start_service() {
	procd_open_instance
	procd_set_param command /usr/sbin/miredo-watchdog.sh /etc/miredo/miredo-watchdog.conf
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_close_instance
}

check_miredo_is_running() {
	local check=`ps -w | grep "/usr/sbin/miredo " | wc -l`
	test "z$check" = "z0" && echo "false" || echo "true"
}

check_miredowd_is_running() {
	local check=`ps -w | grep "/usr/sbin/miredo-watchdog.sh " | wc -l`
	test "z$check" = "z0" && echo "false" || echo "true"
}

stop_service() {
	if [ "`check_miredowd_is_running`" = "true" ]; then
		echo "terminating miredo client watchdog"
		2>/dev/null killall -TERM miredo-watchdog.sh
		test "`check_miredowd_is_running`" = "true" && sleep 1
		test "`check_miredowd_is_running`" = "true" && echo "killing miredo client watchdog" && 2>/dev/null killall -KILL miredo-watchdog.sh
		test "`check_miredowd_is_running`" = "true" && sleep 1
		test "`check_miredowd_is_running`" = "true" && echo "miredo client watchdog is NOT terminated!" && exit 1
	fi
	if [ "`check_miredo_is_running`" = "true" ]; then
		echo "terminating miredo client instance on service stop"
		2>/dev/null killall -TERM miredo
		test "`check_miredo_is_running`" = "true" && sleep 3
		test "`check_miredo_is_running`" = "true" && echo "killing miredo client instance on service stop" && 2>/dev/null killall -KILL miredo
		test "`check_miredo_is_running`" = "true" && sleep 5
		test "`check_miredo_is_running`" = "true" && echo "miredo client is NOT terminated!" && exit 1
 	fi
}

